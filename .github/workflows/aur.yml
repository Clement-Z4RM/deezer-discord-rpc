name: Publish to AUR repository

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    if: github.repository == 'JustYuuto/deezer-discord-rpc' && github.event_name == 'release' && github.event.action == 'published'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2

      - name: Generate PKGBUILD
        run: bun scripts/pkgbuild.ts

      - name: Publish to AUR
        uses: KSXGitHub/github-actions-deploy-aur@master
        if: github.event_name == 'release' && github.event.action == 'published'
        with:
          pkgname: deezer-discord-rpc-bin
          pkgbuild: ./PKGBUILD
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: "Update to version ${{ github.event.release.tag_name }}"

  publish-manual:
    runs-on: ubuntu-latest
    if: github.repository == 'JustYuuto/deezer-discord-rpc' && github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full history is fetched
      - uses: oven-sh/setup-bun@v2

      - name: Generate PKGBUILD
        run: bun scripts/pkgbuild.ts

      - name: Get latest tag
        run: echo "LATEST_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Use latest tag
        run: echo "Latest tag is $LATEST_TAG"

      - name: Publish to AUR
        uses: KSXGitHub/github-actions-deploy-aur@master
        with:
          pkgname: deezer-discord-rpc-bin
          pkgbuild: ./PKGBUILD
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: "Update to version ${{ env.LATEST_TAG }}"